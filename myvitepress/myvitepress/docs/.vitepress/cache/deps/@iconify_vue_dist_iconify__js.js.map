{
  "version": 3,
  "sources": ["../../../../node_modules/@iconify/vue/dist/iconify.js"],
  "sourcesContent": ["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vue')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'vue'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Icon = {}, global.Vue));\n})(this, (function (exports, vue) { 'use strict';\n\n  const matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\n  const stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n    const colonSeparated = value.split(\":\");\n    if (value.slice(0, 1) === \"@\") {\n      if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n        return null;\n      }\n      provider = colonSeparated.shift().slice(1);\n    }\n    if (colonSeparated.length > 3 || !colonSeparated.length) {\n      return null;\n    }\n    if (colonSeparated.length > 1) {\n      const name2 = colonSeparated.pop();\n      const prefix = colonSeparated.pop();\n      const result = {\n        // Allow provider without '@': \"provider:prefix:name\"\n        provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n        prefix,\n        name: name2\n      };\n      return validate && !validateIconName(result) ? null : result;\n    }\n    const name = colonSeparated[0];\n    const dashSeparated = name.split(\"-\");\n    if (dashSeparated.length > 1) {\n      const result = {\n        provider,\n        prefix: dashSeparated.shift(),\n        name: dashSeparated.join(\"-\")\n      };\n      return validate && !validateIconName(result) ? null : result;\n    }\n    if (allowSimpleName && provider === \"\") {\n      const result = {\n        provider,\n        prefix: \"\",\n        name\n      };\n      return validate && !validateIconName(result, allowSimpleName) ? null : result;\n    }\n    return null;\n  };\n  const validateIconName = (icon, allowSimpleName) => {\n    if (!icon) {\n      return false;\n    }\n    return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n  };\n\n  const defaultIconDimensions = Object.freeze(\n    {\n      left: 0,\n      top: 0,\n      width: 16,\n      height: 16\n    }\n  );\n  const defaultIconTransformations = Object.freeze({\n    rotate: 0,\n    vFlip: false,\n    hFlip: false\n  });\n  const defaultIconProps = Object.freeze({\n    ...defaultIconDimensions,\n    ...defaultIconTransformations\n  });\n  const defaultExtendedIconProps = Object.freeze({\n    ...defaultIconProps,\n    body: \"\",\n    hidden: false\n  });\n\n  function mergeIconTransformations(obj1, obj2) {\n    const result = {};\n    if (!obj1.hFlip !== !obj2.hFlip) {\n      result.hFlip = true;\n    }\n    if (!obj1.vFlip !== !obj2.vFlip) {\n      result.vFlip = true;\n    }\n    const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n    if (rotate) {\n      result.rotate = rotate;\n    }\n    return result;\n  }\n\n  function mergeIconData(parent, child) {\n    const result = mergeIconTransformations(parent, child);\n    for (const key in defaultExtendedIconProps) {\n      if (key in defaultIconTransformations) {\n        if (key in parent && !(key in result)) {\n          result[key] = defaultIconTransformations[key];\n        }\n      } else if (key in child) {\n        result[key] = child[key];\n      } else if (key in parent) {\n        result[key] = parent[key];\n      }\n    }\n    return result;\n  }\n\n  function getIconsTree(data, names) {\n    const icons = data.icons;\n    const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n    const resolved = /* @__PURE__ */ Object.create(null);\n    function resolve(name) {\n      if (icons[name]) {\n        return resolved[name] = [];\n      }\n      if (!(name in resolved)) {\n        resolved[name] = null;\n        const parent = aliases[name] && aliases[name].parent;\n        const value = parent && resolve(parent);\n        if (value) {\n          resolved[name] = [parent].concat(value);\n        }\n      }\n      return resolved[name];\n    }\n    (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n    return resolved;\n  }\n\n  function internalGetIconData(data, name, tree) {\n    const icons = data.icons;\n    const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n    let currentProps = {};\n    function parse(name2) {\n      currentProps = mergeIconData(\n        icons[name2] || aliases[name2],\n        currentProps\n      );\n    }\n    parse(name);\n    tree.forEach(parse);\n    return mergeIconData(data, currentProps);\n  }\n\n  function parseIconSet(data, callback) {\n    const names = [];\n    if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n      return names;\n    }\n    if (data.not_found instanceof Array) {\n      data.not_found.forEach((name) => {\n        callback(name, null);\n        names.push(name);\n      });\n    }\n    const tree = getIconsTree(data);\n    for (const name in tree) {\n      const item = tree[name];\n      if (item) {\n        callback(name, internalGetIconData(data, name, item));\n        names.push(name);\n      }\n    }\n    return names;\n  }\n\n  const optionalPropertyDefaults = {\n    provider: \"\",\n    aliases: {},\n    not_found: {},\n    ...defaultIconDimensions\n  };\n  function checkOptionalProps(item, defaults) {\n    for (const prop in defaults) {\n      if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function quicklyValidateIconSet(obj) {\n    if (typeof obj !== \"object\" || obj === null) {\n      return null;\n    }\n    const data = obj;\n    if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n      return null;\n    }\n    if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n      return null;\n    }\n    const icons = data.icons;\n    for (const name in icons) {\n      const icon = icons[name];\n      if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n        icon,\n        defaultExtendedIconProps\n      )) {\n        return null;\n      }\n    }\n    const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n    for (const name in aliases) {\n      const icon = aliases[name];\n      const parent = icon.parent;\n      if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n        icon,\n        defaultExtendedIconProps\n      )) {\n        return null;\n      }\n    }\n    return data;\n  }\n\n  const dataStorage = /* @__PURE__ */ Object.create(null);\n  function newStorage(provider, prefix) {\n    return {\n      provider,\n      prefix,\n      icons: /* @__PURE__ */ Object.create(null),\n      missing: /* @__PURE__ */ new Set()\n    };\n  }\n  function getStorage(provider, prefix) {\n    const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n    return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n  }\n  function addIconSet(storage, data) {\n    if (!quicklyValidateIconSet(data)) {\n      return [];\n    }\n    return parseIconSet(data, (name, icon) => {\n      if (icon) {\n        storage.icons[name] = icon;\n      } else {\n        storage.missing.add(name);\n      }\n    });\n  }\n  function addIconToStorage(storage, name, icon) {\n    try {\n      if (typeof icon.body === \"string\") {\n        storage.icons[name] = { ...icon };\n        return true;\n      }\n    } catch (err) {\n    }\n    return false;\n  }\n  function listIcons(provider, prefix) {\n    let allIcons = [];\n    const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n    providers.forEach((provider2) => {\n      const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n      prefixes.forEach((prefix2) => {\n        const storage = getStorage(provider2, prefix2);\n        allIcons = allIcons.concat(\n          Object.keys(storage.icons).map(\n            (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n          )\n        );\n      });\n    });\n    return allIcons;\n  }\n\n  let simpleNames = false;\n  function allowSimpleNames(allow) {\n    if (typeof allow === \"boolean\") {\n      simpleNames = allow;\n    }\n    return simpleNames;\n  }\n  function getIconData(name) {\n    const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n    if (icon) {\n      const storage = getStorage(icon.provider, icon.prefix);\n      const iconName = icon.name;\n      return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n    }\n  }\n  function addIcon(name, data) {\n    const icon = stringToIcon(name, true, simpleNames);\n    if (!icon) {\n      return false;\n    }\n    const storage = getStorage(icon.provider, icon.prefix);\n    return addIconToStorage(storage, icon.name, data);\n  }\n  function addCollection(data, provider) {\n    if (typeof data !== \"object\") {\n      return false;\n    }\n    if (typeof provider !== \"string\") {\n      provider = data.provider || \"\";\n    }\n    if (simpleNames && !provider && !data.prefix) {\n      let added = false;\n      if (quicklyValidateIconSet(data)) {\n        data.prefix = \"\";\n        parseIconSet(data, (name, icon) => {\n          if (icon && addIcon(name, icon)) {\n            added = true;\n          }\n        });\n      }\n      return added;\n    }\n    const prefix = data.prefix;\n    if (!validateIconName({\n      provider,\n      prefix,\n      name: \"a\"\n    })) {\n      return false;\n    }\n    const storage = getStorage(provider, prefix);\n    return !!addIconSet(storage, data);\n  }\n  function iconLoaded(name) {\n    return !!getIconData(name);\n  }\n  function getIcon(name) {\n    const result = getIconData(name);\n    return result ? {\n      ...defaultIconProps,\n      ...result\n    } : null;\n  }\n\n  const defaultIconSizeCustomisations = Object.freeze({\n    width: null,\n    height: null\n  });\n  const defaultIconCustomisations = Object.freeze({\n    // Dimensions\n    ...defaultIconSizeCustomisations,\n    // Transformations\n    ...defaultIconTransformations\n  });\n\n  const unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\n  const unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n  function calculateSize(size, ratio, precision) {\n    if (ratio === 1) {\n      return size;\n    }\n    precision = precision || 100;\n    if (typeof size === \"number\") {\n      return Math.ceil(size * ratio * precision) / precision;\n    }\n    if (typeof size !== \"string\") {\n      return size;\n    }\n    const oldParts = size.split(unitsSplit);\n    if (oldParts === null || !oldParts.length) {\n      return size;\n    }\n    const newParts = [];\n    let code = oldParts.shift();\n    let isNumber = unitsTest.test(code);\n    while (true) {\n      if (isNumber) {\n        const num = parseFloat(code);\n        if (isNaN(num)) {\n          newParts.push(code);\n        } else {\n          newParts.push(Math.ceil(num * ratio * precision) / precision);\n        }\n      } else {\n        newParts.push(code);\n      }\n      code = oldParts.shift();\n      if (code === void 0) {\n        return newParts.join(\"\");\n      }\n      isNumber = !isNumber;\n    }\n  }\n\n  function splitSVGDefs(content, tag = \"defs\") {\n    let defs = \"\";\n    const index = content.indexOf(\"<\" + tag);\n    while (index >= 0) {\n      const start = content.indexOf(\">\", index);\n      const end = content.indexOf(\"</\" + tag);\n      if (start === -1 || end === -1) {\n        break;\n      }\n      const endEnd = content.indexOf(\">\", end);\n      if (endEnd === -1) {\n        break;\n      }\n      defs += content.slice(start + 1, end).trim();\n      content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n    }\n    return {\n      defs,\n      content\n    };\n  }\n  function mergeDefsAndContent(defs, content) {\n    return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n  }\n  function wrapSVGContent(body, start, end) {\n    const split = splitSVGDefs(body);\n    return mergeDefsAndContent(split.defs, start + split.content + end);\n  }\n\n  const isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\n  function iconToSVG(icon, customisations) {\n    const fullIcon = {\n      ...defaultIconProps,\n      ...icon\n    };\n    const fullCustomisations = {\n      ...defaultIconCustomisations,\n      ...customisations\n    };\n    const box = {\n      left: fullIcon.left,\n      top: fullIcon.top,\n      width: fullIcon.width,\n      height: fullIcon.height\n    };\n    let body = fullIcon.body;\n    [fullIcon, fullCustomisations].forEach((props) => {\n      const transformations = [];\n      const hFlip = props.hFlip;\n      const vFlip = props.vFlip;\n      let rotation = props.rotate;\n      if (hFlip) {\n        if (vFlip) {\n          rotation += 2;\n        } else {\n          transformations.push(\n            \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n          );\n          transformations.push(\"scale(-1 1)\");\n          box.top = box.left = 0;\n        }\n      } else if (vFlip) {\n        transformations.push(\n          \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(1 -1)\");\n        box.top = box.left = 0;\n      }\n      let tempValue;\n      if (rotation < 0) {\n        rotation -= Math.floor(rotation / 4) * 4;\n      }\n      rotation = rotation % 4;\n      switch (rotation) {\n        case 1:\n          tempValue = box.height / 2 + box.top;\n          transformations.unshift(\n            \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n          );\n          break;\n        case 2:\n          transformations.unshift(\n            \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n          );\n          break;\n        case 3:\n          tempValue = box.width / 2 + box.left;\n          transformations.unshift(\n            \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n          );\n          break;\n      }\n      if (rotation % 2 === 1) {\n        if (box.left !== box.top) {\n          tempValue = box.left;\n          box.left = box.top;\n          box.top = tempValue;\n        }\n        if (box.width !== box.height) {\n          tempValue = box.width;\n          box.width = box.height;\n          box.height = tempValue;\n        }\n      }\n      if (transformations.length) {\n        body = wrapSVGContent(\n          body,\n          '<g transform=\"' + transformations.join(\" \") + '\">',\n          \"</g>\"\n        );\n      }\n    });\n    const customisationsWidth = fullCustomisations.width;\n    const customisationsHeight = fullCustomisations.height;\n    const boxWidth = box.width;\n    const boxHeight = box.height;\n    let width;\n    let height;\n    if (customisationsWidth === null) {\n      height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n      width = calculateSize(height, boxWidth / boxHeight);\n    } else {\n      width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n      height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    }\n    const attributes = {};\n    const setAttr = (prop, value) => {\n      if (!isUnsetKeyword(value)) {\n        attributes[prop] = value.toString();\n      }\n    };\n    setAttr(\"width\", width);\n    setAttr(\"height\", height);\n    const viewBox = [box.left, box.top, boxWidth, boxHeight];\n    attributes.viewBox = viewBox.join(\" \");\n    return {\n      attributes,\n      viewBox,\n      body\n    };\n  }\n\n  const regex = /\\sid=\"(\\S+)\"/g;\n  const randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\n  let counter = 0;\n  function replaceIDs(body, prefix = randomPrefix) {\n    const ids = [];\n    let match;\n    while (match = regex.exec(body)) {\n      ids.push(match[1]);\n    }\n    if (!ids.length) {\n      return body;\n    }\n    const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n    ids.forEach((id) => {\n      const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n      const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n      body = body.replace(\n        // Allowed characters before id: [#;\"]\n        // Allowed characters after id: [)\"], .[a-z]\n        new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n        \"$1\" + newID + suffix + \"$3\"\n      );\n    });\n    body = body.replace(new RegExp(suffix, \"g\"), \"\");\n    return body;\n  }\n\n  const storage = /* @__PURE__ */ Object.create(null);\n  function setAPIModule(provider, item) {\n    storage[provider] = item;\n  }\n  function getAPIModule(provider) {\n    return storage[provider] || storage[\"\"];\n  }\n\n  function createAPIConfig(source) {\n    let resources;\n    if (typeof source.resources === \"string\") {\n      resources = [source.resources];\n    } else {\n      resources = source.resources;\n      if (!(resources instanceof Array) || !resources.length) {\n        return null;\n      }\n    }\n    const result = {\n      // API hosts\n      resources,\n      // Root path\n      path: source.path || \"/\",\n      // URL length limit\n      maxURL: source.maxURL || 500,\n      // Timeout before next host is used.\n      rotate: source.rotate || 750,\n      // Timeout before failing query.\n      timeout: source.timeout || 5e3,\n      // Randomise default API end point.\n      random: source.random === true,\n      // Start index\n      index: source.index || 0,\n      // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n      dataAfterTimeout: source.dataAfterTimeout !== false\n    };\n    return result;\n  }\n  const configStorage = /* @__PURE__ */ Object.create(null);\n  const fallBackAPISources = [\n    \"https://api.simplesvg.com\",\n    \"https://api.unisvg.com\"\n  ];\n  const fallBackAPI = [];\n  while (fallBackAPISources.length > 0) {\n    if (fallBackAPISources.length === 1) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      if (Math.random() > 0.5) {\n        fallBackAPI.push(fallBackAPISources.shift());\n      } else {\n        fallBackAPI.push(fallBackAPISources.pop());\n      }\n    }\n  }\n  configStorage[\"\"] = createAPIConfig({\n    resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n  });\n  function addAPIProvider(provider, customConfig) {\n    const config = createAPIConfig(customConfig);\n    if (config === null) {\n      return false;\n    }\n    configStorage[provider] = config;\n    return true;\n  }\n  function getAPIConfig(provider) {\n    return configStorage[provider];\n  }\n  function listAPIProviders() {\n    return Object.keys(configStorage);\n  }\n\n  const detectFetch = () => {\n    let callback;\n    try {\n      callback = fetch;\n      if (typeof callback === \"function\") {\n        return callback;\n      }\n    } catch (err) {\n    }\n  };\n  let fetchModule = detectFetch();\n  function setFetch(fetch2) {\n    fetchModule = fetch2;\n  }\n  function getFetch() {\n    return fetchModule;\n  }\n  function calculateMaxLength(provider, prefix) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return 0;\n    }\n    let result;\n    if (!config.maxURL) {\n      result = 0;\n    } else {\n      let maxHostLength = 0;\n      config.resources.forEach((item) => {\n        const host = item;\n        maxHostLength = Math.max(maxHostLength, host.length);\n      });\n      const url = prefix + \".json?icons=\";\n      result = config.maxURL - maxHostLength - config.path.length - url.length;\n    }\n    return result;\n  }\n  function shouldAbort(status) {\n    return status === 404;\n  }\n  const prepare = (provider, prefix, icons) => {\n    const results = [];\n    const maxLength = calculateMaxLength(provider, prefix);\n    const type = \"icons\";\n    let item = {\n      type,\n      provider,\n      prefix,\n      icons: []\n    };\n    let length = 0;\n    icons.forEach((name, index) => {\n      length += name.length + 1;\n      if (length >= maxLength && index > 0) {\n        results.push(item);\n        item = {\n          type,\n          provider,\n          prefix,\n          icons: []\n        };\n        length = name.length;\n      }\n      item.icons.push(name);\n    });\n    results.push(item);\n    return results;\n  };\n  function getPath(provider) {\n    if (typeof provider === \"string\") {\n      const config = getAPIConfig(provider);\n      if (config) {\n        return config.path;\n      }\n    }\n    return \"/\";\n  }\n  const send = (host, params, callback) => {\n    if (!fetchModule) {\n      callback(\"abort\", 424);\n      return;\n    }\n    let path = getPath(params.provider);\n    switch (params.type) {\n      case \"icons\": {\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(\",\");\n        const urlParams = new URLSearchParams({\n          icons: iconsList\n        });\n        path += prefix + \".json?\" + urlParams.toString();\n        break;\n      }\n      case \"custom\": {\n        const uri = params.uri;\n        path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n        break;\n      }\n      default:\n        callback(\"abort\", 400);\n        return;\n    }\n    let defaultError = 503;\n    fetchModule(host + path).then((response) => {\n      const status = response.status;\n      if (status !== 200) {\n        setTimeout(() => {\n          callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n        });\n        return;\n      }\n      defaultError = 501;\n      return response.json();\n    }).then((data) => {\n      if (typeof data !== \"object\" || data === null) {\n        setTimeout(() => {\n          if (data === 404) {\n            callback(\"abort\", data);\n          } else {\n            callback(\"next\", defaultError);\n          }\n        });\n        return;\n      }\n      setTimeout(() => {\n        callback(\"success\", data);\n      });\n    }).catch(() => {\n      callback(\"next\", defaultError);\n    });\n  };\n  const fetchAPIModule = {\n    prepare,\n    send\n  };\n\n  function sortIcons(icons) {\n    const result = {\n      loaded: [],\n      missing: [],\n      pending: []\n    };\n    const storage = /* @__PURE__ */ Object.create(null);\n    icons.sort((a, b) => {\n      if (a.provider !== b.provider) {\n        return a.provider.localeCompare(b.provider);\n      }\n      if (a.prefix !== b.prefix) {\n        return a.prefix.localeCompare(b.prefix);\n      }\n      return a.name.localeCompare(b.name);\n    });\n    let lastIcon = {\n      provider: \"\",\n      prefix: \"\",\n      name: \"\"\n    };\n    icons.forEach((icon) => {\n      if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n        return;\n      }\n      lastIcon = icon;\n      const provider = icon.provider;\n      const prefix = icon.prefix;\n      const name = icon.name;\n      const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n      const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n      let list;\n      if (name in localStorage.icons) {\n        list = result.loaded;\n      } else if (prefix === \"\" || localStorage.missing.has(name)) {\n        list = result.missing;\n      } else {\n        list = result.pending;\n      }\n      const item = {\n        provider,\n        prefix,\n        name\n      };\n      list.push(item);\n    });\n    return result;\n  }\n\n  function removeCallback(storages, id) {\n    storages.forEach((storage) => {\n      const items = storage.loaderCallbacks;\n      if (items) {\n        storage.loaderCallbacks = items.filter((row) => row.id !== id);\n      }\n    });\n  }\n  function updateCallbacks(storage) {\n    if (!storage.pendingCallbacksFlag) {\n      storage.pendingCallbacksFlag = true;\n      setTimeout(() => {\n        storage.pendingCallbacksFlag = false;\n        const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n        if (!items.length) {\n          return;\n        }\n        let hasPending = false;\n        const provider = storage.provider;\n        const prefix = storage.prefix;\n        items.forEach((item) => {\n          const icons = item.icons;\n          const oldLength = icons.pending.length;\n          icons.pending = icons.pending.filter((icon) => {\n            if (icon.prefix !== prefix) {\n              return true;\n            }\n            const name = icon.name;\n            if (storage.icons[name]) {\n              icons.loaded.push({\n                provider,\n                prefix,\n                name\n              });\n            } else if (storage.missing.has(name)) {\n              icons.missing.push({\n                provider,\n                prefix,\n                name\n              });\n            } else {\n              hasPending = true;\n              return true;\n            }\n            return false;\n          });\n          if (icons.pending.length !== oldLength) {\n            if (!hasPending) {\n              removeCallback([storage], item.id);\n            }\n            item.callback(\n              icons.loaded.slice(0),\n              icons.missing.slice(0),\n              icons.pending.slice(0),\n              item.abort\n            );\n          }\n        });\n      });\n    }\n  }\n  let idCounter = 0;\n  function storeCallback(callback, icons, pendingSources) {\n    const id = idCounter++;\n    const abort = removeCallback.bind(null, pendingSources, id);\n    if (!icons.pending.length) {\n      return abort;\n    }\n    const item = {\n      id,\n      icons,\n      callback,\n      abort\n    };\n    pendingSources.forEach((storage) => {\n      (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n    });\n    return abort;\n  }\n\n  function listToIcons(list, validate = true, simpleNames = false) {\n    const result = [];\n    list.forEach((item) => {\n      const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n      if (icon) {\n        result.push(icon);\n      }\n    });\n    return result;\n  }\n\n  // src/config.ts\n  var defaultConfig = {\n    resources: [],\n    index: 0,\n    timeout: 2e3,\n    rotate: 750,\n    random: false,\n    dataAfterTimeout: false\n  };\n\n  // src/query.ts\n  function sendQuery(config, payload, query, done) {\n    const resourcesCount = config.resources.length;\n    const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n    let resources;\n    if (config.random) {\n      let list = config.resources.slice(0);\n      resources = [];\n      while (list.length > 1) {\n        const nextIndex = Math.floor(Math.random() * list.length);\n        resources.push(list[nextIndex]);\n        list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n      }\n      resources = resources.concat(list);\n    } else {\n      resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n    }\n    const startTime = Date.now();\n    let status = \"pending\";\n    let queriesSent = 0;\n    let lastError;\n    let timer = null;\n    let queue = [];\n    let doneCallbacks = [];\n    if (typeof done === \"function\") {\n      doneCallbacks.push(done);\n    }\n    function resetTimer() {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n    }\n    function abort() {\n      if (status === \"pending\") {\n        status = \"aborted\";\n      }\n      resetTimer();\n      queue.forEach((item) => {\n        if (item.status === \"pending\") {\n          item.status = \"aborted\";\n        }\n      });\n      queue = [];\n    }\n    function subscribe(callback, overwrite) {\n      if (overwrite) {\n        doneCallbacks = [];\n      }\n      if (typeof callback === \"function\") {\n        doneCallbacks.push(callback);\n      }\n    }\n    function getQueryStatus() {\n      return {\n        startTime,\n        payload,\n        status,\n        queriesSent,\n        queriesPending: queue.length,\n        subscribe,\n        abort\n      };\n    }\n    function failQuery() {\n      status = \"failed\";\n      doneCallbacks.forEach((callback) => {\n        callback(void 0, lastError);\n      });\n    }\n    function clearQueue() {\n      queue.forEach((item) => {\n        if (item.status === \"pending\") {\n          item.status = \"aborted\";\n        }\n      });\n      queue = [];\n    }\n    function moduleResponse(item, response, data) {\n      const isError = response !== \"success\";\n      queue = queue.filter((queued) => queued !== item);\n      switch (status) {\n        case \"pending\":\n          break;\n        case \"failed\":\n          if (isError || !config.dataAfterTimeout) {\n            return;\n          }\n          break;\n        default:\n          return;\n      }\n      if (response === \"abort\") {\n        lastError = data;\n        failQuery();\n        return;\n      }\n      if (isError) {\n        lastError = data;\n        if (!queue.length) {\n          if (!resources.length) {\n            failQuery();\n          } else {\n            execNext();\n          }\n        }\n        return;\n      }\n      resetTimer();\n      clearQueue();\n      if (!config.random) {\n        const index = config.resources.indexOf(item.resource);\n        if (index !== -1 && index !== config.index) {\n          config.index = index;\n        }\n      }\n      status = \"completed\";\n      doneCallbacks.forEach((callback) => {\n        callback(data);\n      });\n    }\n    function execNext() {\n      if (status !== \"pending\") {\n        return;\n      }\n      resetTimer();\n      const resource = resources.shift();\n      if (resource === void 0) {\n        if (queue.length) {\n          timer = setTimeout(() => {\n            resetTimer();\n            if (status === \"pending\") {\n              clearQueue();\n              failQuery();\n            }\n          }, config.timeout);\n          return;\n        }\n        failQuery();\n        return;\n      }\n      const item = {\n        status: \"pending\",\n        resource,\n        callback: (status2, data) => {\n          moduleResponse(item, status2, data);\n        }\n      };\n      queue.push(item);\n      queriesSent++;\n      timer = setTimeout(execNext, config.rotate);\n      query(resource, payload, item.callback);\n    }\n    setTimeout(execNext);\n    return getQueryStatus;\n  }\n\n  // src/index.ts\n  function initRedundancy(cfg) {\n    const config = {\n      ...defaultConfig,\n      ...cfg\n    };\n    let queries = [];\n    function cleanup() {\n      queries = queries.filter((item) => item().status === \"pending\");\n    }\n    function query(payload, queryCallback, doneCallback) {\n      const query2 = sendQuery(\n        config,\n        payload,\n        queryCallback,\n        (data, error) => {\n          cleanup();\n          if (doneCallback) {\n            doneCallback(data, error);\n          }\n        }\n      );\n      queries.push(query2);\n      return query2;\n    }\n    function find(callback) {\n      return queries.find((value) => {\n        return callback(value);\n      }) || null;\n    }\n    const instance = {\n      query,\n      find,\n      setIndex: (index) => {\n        config.index = index;\n      },\n      getIndex: () => config.index,\n      cleanup\n    };\n    return instance;\n  }\n\n  function emptyCallback$1() {\n  }\n  const redundancyCache = /* @__PURE__ */ Object.create(null);\n  function getRedundancyCache(provider) {\n    if (!redundancyCache[provider]) {\n      const config = getAPIConfig(provider);\n      if (!config) {\n        return;\n      }\n      const redundancy = initRedundancy(config);\n      const cachedReundancy = {\n        config,\n        redundancy\n      };\n      redundancyCache[provider] = cachedReundancy;\n    }\n    return redundancyCache[provider];\n  }\n  function sendAPIQuery(target, query, callback) {\n    let redundancy;\n    let send;\n    if (typeof target === \"string\") {\n      const api = getAPIModule(target);\n      if (!api) {\n        callback(void 0, 424);\n        return emptyCallback$1;\n      }\n      send = api.send;\n      const cached = getRedundancyCache(target);\n      if (cached) {\n        redundancy = cached.redundancy;\n      }\n    } else {\n      const config = createAPIConfig(target);\n      if (config) {\n        redundancy = initRedundancy(config);\n        const moduleKey = target.resources ? target.resources[0] : \"\";\n        const api = getAPIModule(moduleKey);\n        if (api) {\n          send = api.send;\n        }\n      }\n    }\n    if (!redundancy || !send) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    return redundancy.query(query, send, callback)().abort;\n  }\n\n  const browserCacheVersion = \"iconify2\";\n  const browserCachePrefix = \"iconify\";\n  const browserCacheCountKey = browserCachePrefix + \"-count\";\n  const browserCacheVersionKey = browserCachePrefix + \"-version\";\n  const browserStorageHour = 36e5;\n  const browserStorageCacheExpiration = 168;\n  const browserStorageLimit = 50;\n\n  function getStoredItem(func, key) {\n    try {\n      return func.getItem(key);\n    } catch (err) {\n    }\n  }\n  function setStoredItem(func, key, value) {\n    try {\n      func.setItem(key, value);\n      return true;\n    } catch (err) {\n    }\n  }\n  function removeStoredItem(func, key) {\n    try {\n      func.removeItem(key);\n    } catch (err) {\n    }\n  }\n\n  function setBrowserStorageItemsCount(storage, value) {\n    return setStoredItem(storage, browserCacheCountKey, value.toString());\n  }\n  function getBrowserStorageItemsCount(storage) {\n    return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n  }\n\n  const browserStorageConfig = {\n    local: true,\n    session: true\n  };\n  const browserStorageEmptyItems = {\n    local: /* @__PURE__ */ new Set(),\n    session: /* @__PURE__ */ new Set()\n  };\n  let browserStorageStatus = false;\n  function setBrowserStorageStatus(status) {\n    browserStorageStatus = status;\n  }\n\n  let _window = typeof window === \"undefined\" ? {} : window;\n  function getBrowserStorage(key) {\n    const attr = key + \"Storage\";\n    try {\n      if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n        return _window[attr];\n      }\n    } catch (err) {\n    }\n    browserStorageConfig[key] = false;\n  }\n\n  function iterateBrowserStorage(key, callback) {\n    const func = getBrowserStorage(key);\n    if (!func) {\n      return;\n    }\n    const version = getStoredItem(func, browserCacheVersionKey);\n    if (version !== browserCacheVersion) {\n      if (version) {\n        const total2 = getBrowserStorageItemsCount(func);\n        for (let i = 0; i < total2; i++) {\n          removeStoredItem(func, browserCachePrefix + i.toString());\n        }\n      }\n      setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n      setBrowserStorageItemsCount(func, 0);\n      return;\n    }\n    const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n    const parseItem = (index) => {\n      const name = browserCachePrefix + index.toString();\n      const item = getStoredItem(func, name);\n      if (typeof item !== \"string\") {\n        return;\n      }\n      try {\n        const data = JSON.parse(item);\n        if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && // Valid item: run callback\n        callback(data, index)) {\n          return true;\n        }\n      } catch (err) {\n      }\n      removeStoredItem(func, name);\n    };\n    let total = getBrowserStorageItemsCount(func);\n    for (let i = total - 1; i >= 0; i--) {\n      if (!parseItem(i)) {\n        if (i === total - 1) {\n          total--;\n          setBrowserStorageItemsCount(func, total);\n        } else {\n          browserStorageEmptyItems[key].add(i);\n        }\n      }\n    }\n  }\n\n  function initBrowserStorage() {\n    if (browserStorageStatus) {\n      return;\n    }\n    setBrowserStorageStatus(true);\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        const provider = item.provider;\n        const prefix = iconSet.prefix;\n        const storage = getStorage(\n          provider,\n          prefix\n        );\n        if (!addIconSet(storage, iconSet).length) {\n          return false;\n        }\n        const lastModified = iconSet.lastModified || -1;\n        storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n        return true;\n      });\n    }\n  }\n\n  function updateLastModified(storage, lastModified) {\n    const lastValue = storage.lastModifiedCached;\n    if (\n      // Matches or newer\n      lastValue && lastValue >= lastModified\n    ) {\n      return lastValue === lastModified;\n    }\n    storage.lastModifiedCached = lastModified;\n    if (lastValue) {\n      for (const key in browserStorageConfig) {\n        iterateBrowserStorage(key, (item) => {\n          const iconSet = item.data;\n          return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n        });\n      }\n    }\n    return true;\n  }\n  function storeInBrowserStorage(storage, data) {\n    if (!browserStorageStatus) {\n      initBrowserStorage();\n    }\n    function store(key) {\n      let func;\n      if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n        return;\n      }\n      const set = browserStorageEmptyItems[key];\n      let index;\n      if (set.size) {\n        set.delete(index = Array.from(set).shift());\n      } else {\n        index = getBrowserStorageItemsCount(func);\n        if (index >= browserStorageLimit || !setBrowserStorageItemsCount(func, index + 1)) {\n          return;\n        }\n      }\n      const item = {\n        cached: Math.floor(Date.now() / browserStorageHour),\n        provider: storage.provider,\n        data\n      };\n      return setStoredItem(\n        func,\n        browserCachePrefix + index.toString(),\n        JSON.stringify(item)\n      );\n    }\n    if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n      return;\n    }\n    if (!Object.keys(data.icons).length) {\n      return;\n    }\n    if (data.not_found) {\n      data = Object.assign({}, data);\n      delete data.not_found;\n    }\n    if (!store(\"local\")) {\n      store(\"session\");\n    }\n  }\n\n  function emptyCallback() {\n  }\n  function loadedNewIcons(storage) {\n    if (!storage.iconsLoaderFlag) {\n      storage.iconsLoaderFlag = true;\n      setTimeout(() => {\n        storage.iconsLoaderFlag = false;\n        updateCallbacks(storage);\n      });\n    }\n  }\n  function loadNewIcons(storage, icons) {\n    if (!storage.iconsToLoad) {\n      storage.iconsToLoad = icons;\n    } else {\n      storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n    }\n    if (!storage.iconsQueueFlag) {\n      storage.iconsQueueFlag = true;\n      setTimeout(() => {\n        storage.iconsQueueFlag = false;\n        const { provider, prefix } = storage;\n        const icons2 = storage.iconsToLoad;\n        delete storage.iconsToLoad;\n        let api;\n        if (!icons2 || !(api = getAPIModule(provider))) {\n          return;\n        }\n        const params = api.prepare(provider, prefix, icons2);\n        params.forEach((item) => {\n          sendAPIQuery(provider, item, (data) => {\n            if (typeof data !== \"object\") {\n              item.icons.forEach((name) => {\n                storage.missing.add(name);\n              });\n            } else {\n              try {\n                const parsed = addIconSet(\n                  storage,\n                  data\n                );\n                if (!parsed.length) {\n                  return;\n                }\n                const pending = storage.pendingIcons;\n                if (pending) {\n                  parsed.forEach((name) => {\n                    pending.delete(name);\n                  });\n                }\n                storeInBrowserStorage(storage, data);\n              } catch (err) {\n                console.error(err);\n              }\n            }\n            loadedNewIcons(storage);\n          });\n        });\n      });\n    }\n  }\n  const loadIcons = (icons, callback) => {\n    const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n    const sortedIcons = sortIcons(cleanedIcons);\n    if (!sortedIcons.pending.length) {\n      let callCallback = true;\n      if (callback) {\n        setTimeout(() => {\n          if (callCallback) {\n            callback(\n              sortedIcons.loaded,\n              sortedIcons.missing,\n              sortedIcons.pending,\n              emptyCallback\n            );\n          }\n        });\n      }\n      return () => {\n        callCallback = false;\n      };\n    }\n    const newIcons = /* @__PURE__ */ Object.create(null);\n    const sources = [];\n    let lastProvider, lastPrefix;\n    sortedIcons.pending.forEach((icon) => {\n      const { provider, prefix } = icon;\n      if (prefix === lastPrefix && provider === lastProvider) {\n        return;\n      }\n      lastProvider = provider;\n      lastPrefix = prefix;\n      sources.push(getStorage(provider, prefix));\n      const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n      if (!providerNewIcons[prefix]) {\n        providerNewIcons[prefix] = [];\n      }\n    });\n    sortedIcons.pending.forEach((icon) => {\n      const { provider, prefix, name } = icon;\n      const storage = getStorage(provider, prefix);\n      const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n      if (!pendingQueue.has(name)) {\n        pendingQueue.add(name);\n        newIcons[provider][prefix].push(name);\n      }\n    });\n    sources.forEach((storage) => {\n      const { provider, prefix } = storage;\n      if (newIcons[provider][prefix].length) {\n        loadNewIcons(storage, newIcons[provider][prefix]);\n      }\n    });\n    return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n  };\n  const loadIcon = (icon) => {\n    return new Promise((fulfill, reject) => {\n      const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n      if (!iconObj) {\n        reject(icon);\n        return;\n      }\n      loadIcons([iconObj || icon], (loaded) => {\n        if (loaded.length && iconObj) {\n          const data = getIconData(iconObj);\n          if (data) {\n            fulfill({\n              ...defaultIconProps,\n              ...data\n            });\n            return;\n          }\n        }\n        reject(icon);\n      });\n    });\n  };\n\n  function toggleBrowserCache(storage, value) {\n    switch (storage) {\n      case \"local\":\n      case \"session\":\n        browserStorageConfig[storage] = value;\n        break;\n      case \"all\":\n        for (const key in browserStorageConfig) {\n          browserStorageConfig[key] = value;\n        }\n        break;\n    }\n  }\n\n  function mergeCustomisations(defaults, item) {\n    const result = {\n      ...defaults\n    };\n    for (const key in item) {\n      const value = item[key];\n      const valueType = typeof value;\n      if (key in defaultIconSizeCustomisations) {\n        if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n          result[key] = value;\n        }\n      } else if (valueType === typeof result[key]) {\n        result[key] = key === \"rotate\" ? value % 4 : value;\n      }\n    }\n    return result;\n  }\n\n  const separator = /[\\s,]+/;\n  function flipFromString(custom, flip) {\n    flip.split(separator).forEach((str) => {\n      const value = str.trim();\n      switch (value) {\n        case \"horizontal\":\n          custom.hFlip = true;\n          break;\n        case \"vertical\":\n          custom.vFlip = true;\n          break;\n      }\n    });\n  }\n\n  function rotateFromString(value, defaultValue = 0) {\n    const units = value.replace(/^-?[0-9.]*/, \"\");\n    function cleanup(value2) {\n      while (value2 < 0) {\n        value2 += 4;\n      }\n      return value2 % 4;\n    }\n    if (units === \"\") {\n      const num = parseInt(value);\n      return isNaN(num) ? 0 : cleanup(num);\n    } else if (units !== value) {\n      let split = 0;\n      switch (units) {\n        case \"%\":\n          split = 25;\n          break;\n        case \"deg\":\n          split = 90;\n      }\n      if (split) {\n        let num = parseFloat(value.slice(0, value.length - units.length));\n        if (isNaN(num)) {\n          return 0;\n        }\n        num = num / split;\n        return num % 1 === 0 ? cleanup(num) : 0;\n      }\n    }\n    return defaultValue;\n  }\n\n  function iconToHTML(body, attributes) {\n    let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n    for (const attr in attributes) {\n      renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n    }\n    return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n  }\n\n  function encodeSVGforURL(svg) {\n    return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n  }\n  function svgToData(svg) {\n    return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n  }\n  function svgToURL(svg) {\n    return 'url(\"' + svgToData(svg) + '\")';\n  }\n\n  const defaultExtendedIconCustomisations = {\n      ...defaultIconCustomisations,\n      inline: false,\n  };\n\n  /**\n   * Default SVG attributes\n   */\n  const svgDefaults = {\n      'xmlns': 'http://www.w3.org/2000/svg',\n      'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n      'aria-hidden': true,\n      'role': 'img',\n  };\n  /**\n   * Style modes\n   */\n  const commonProps = {\n      display: 'inline-block',\n  };\n  const monotoneProps = {\n      backgroundColor: 'currentColor',\n  };\n  const coloredProps = {\n      backgroundColor: 'transparent',\n  };\n  // Dynamically add common props to variables above\n  const propsToAdd = {\n      Image: 'var(--svg)',\n      Repeat: 'no-repeat',\n      Size: '100% 100%',\n  };\n  const propsToAddTo = {\n      webkitMask: monotoneProps,\n      mask: monotoneProps,\n      background: coloredProps,\n  };\n  for (const prefix in propsToAddTo) {\n      const list = propsToAddTo[prefix];\n      for (const prop in propsToAdd) {\n          list[prefix + prop] = propsToAdd[prop];\n      }\n  }\n  /**\n   * Aliases for customisations.\n   * In Vue 'v-' properties are reserved, so v-flip must be renamed\n   */\n  const customisationAliases = {};\n  ['horizontal', 'vertical'].forEach((prefix) => {\n      const attr = prefix.slice(0, 1) + 'Flip';\n      // vertical-flip\n      customisationAliases[prefix + '-flip'] = attr;\n      // v-flip\n      customisationAliases[prefix.slice(0, 1) + '-flip'] = attr;\n      // verticalFlip\n      customisationAliases[prefix + 'Flip'] = attr;\n  });\n  /**\n   * Fix size: add 'px' to numbers\n   */\n  function fixSize(value) {\n      return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n  }\n  /**\n   * Render icon\n   */\n  const render = (\n  // Icon must be validated before calling this function\n  icon, \n  // Partial properties\n  props) => {\n      // Split properties\n      const customisations = mergeCustomisations(defaultExtendedIconCustomisations, props);\n      const componentProps = { ...svgDefaults };\n      // Check mode\n      const mode = props.mode || 'svg';\n      // Copy style\n      const style = {};\n      const propsStyle = props.style;\n      const customStyle = typeof propsStyle === 'object' && !(propsStyle instanceof Array)\n          ? propsStyle\n          : {};\n      // Get element properties\n      for (let key in props) {\n          const value = props[key];\n          if (value === void 0) {\n              continue;\n          }\n          switch (key) {\n              // Properties to ignore\n              case 'icon':\n              case 'style':\n              case 'onLoad':\n              case 'mode':\n                  break;\n              // Boolean attributes\n              case 'inline':\n              case 'hFlip':\n              case 'vFlip':\n                  customisations[key] =\n                      value === true || value === 'true' || value === 1;\n                  break;\n              // Flip as string: 'horizontal,vertical'\n              case 'flip':\n                  if (typeof value === 'string') {\n                      flipFromString(customisations, value);\n                  }\n                  break;\n              // Color: override style\n              case 'color':\n                  style.color = value;\n                  break;\n              // Rotation as string\n              case 'rotate':\n                  if (typeof value === 'string') {\n                      customisations[key] = rotateFromString(value);\n                  }\n                  else if (typeof value === 'number') {\n                      customisations[key] = value;\n                  }\n                  break;\n              // Remove aria-hidden\n              case 'ariaHidden':\n              case 'aria-hidden':\n                  // Vue transforms 'aria-hidden' property to 'ariaHidden'\n                  if (value !== true && value !== 'true') {\n                      delete componentProps['aria-hidden'];\n                  }\n                  break;\n              default: {\n                  const alias = customisationAliases[key];\n                  if (alias) {\n                      // Aliases for boolean customisations\n                      if (value === true || value === 'true' || value === 1) {\n                          customisations[alias] = true;\n                      }\n                  }\n                  else if (defaultExtendedIconCustomisations[key] === void 0) {\n                      // Copy missing property if it does not exist in customisations\n                      componentProps[key] = value;\n                  }\n              }\n          }\n      }\n      // Generate icon\n      const item = iconToSVG(icon, customisations);\n      const renderAttribs = item.attributes;\n      // Inline display\n      if (customisations.inline) {\n          style.verticalAlign = '-0.125em';\n      }\n      if (mode === 'svg') {\n          // Add style\n          componentProps.style = {\n              ...style,\n              ...customStyle,\n          };\n          // Add icon stuff\n          Object.assign(componentProps, renderAttribs);\n          // Counter for ids based on \"id\" property to render icons consistently on server and client\n          let localCounter = 0;\n          let id = props.id;\n          if (typeof id === 'string') {\n              // Convert '-' to '_' to avoid errors in animations\n              id = id.replace(/-/g, '_');\n          }\n          // Add innerHTML and style to props\n          componentProps['innerHTML'] = replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyVue');\n          // Render icon\n          return vue.h('svg', componentProps);\n      }\n      // Render <span> with style\n      const { body, width, height } = icon;\n      const useMask = mode === 'mask' ||\n          (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n      // Generate SVG\n      const html = iconToHTML(body, {\n          ...renderAttribs,\n          width: width + '',\n          height: height + '',\n      });\n      // Generate style\n      componentProps.style = {\n          ...style,\n          '--svg': svgToURL(html),\n          'width': fixSize(renderAttribs.width),\n          'height': fixSize(renderAttribs.height),\n          ...commonProps,\n          ...(useMask ? monotoneProps : coloredProps),\n          ...customStyle,\n      };\n      return vue.h('span', componentProps);\n  };\n\n  /**\n   * Enable cache\n   */\n  function enableCache(storage) {\n      toggleBrowserCache(storage, true);\n  }\n  /**\n   * Disable cache\n   */\n  function disableCache(storage) {\n      toggleBrowserCache(storage, false);\n  }\n  /**\n   * Initialise stuff\n   */\n  // Enable short names\n  allowSimpleNames(true);\n  // Set API module\n  setAPIModule('', fetchAPIModule);\n  /**\n   * Browser stuff\n   */\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n      // Set cache and load existing cache\n      initBrowserStorage();\n      const _window = window;\n      // Load icons from global \"IconifyPreload\"\n      if (_window.IconifyPreload !== void 0) {\n          const preload = _window.IconifyPreload;\n          const err = 'Invalid IconifyPreload syntax.';\n          if (typeof preload === 'object' && preload !== null) {\n              (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                  try {\n                      if (\n                      // Check if item is an object and not null/array\n                      typeof item !== 'object' ||\n                          item === null ||\n                          item instanceof Array ||\n                          // Check for 'icons' and 'prefix'\n                          typeof item.icons !== 'object' ||\n                          typeof item.prefix !== 'string' ||\n                          // Add icon set\n                          !addCollection(item)) {\n                          console.error(err);\n                      }\n                  }\n                  catch (e) {\n                      console.error(err);\n                  }\n              });\n          }\n      }\n      // Set API from global \"IconifyProviders\"\n      if (_window.IconifyProviders !== void 0) {\n          const providers = _window.IconifyProviders;\n          if (typeof providers === 'object' && providers !== null) {\n              for (let key in providers) {\n                  const err = 'IconifyProviders[' + key + '] is invalid.';\n                  try {\n                      const value = providers[key];\n                      if (typeof value !== 'object' ||\n                          !value ||\n                          value.resources === void 0) {\n                          continue;\n                      }\n                      if (!addAPIProvider(key, value)) {\n                          console.error(err);\n                      }\n                  }\n                  catch (e) {\n                      console.error(err);\n                  }\n              }\n          }\n      }\n  }\n  /**\n   * Empty icon data, rendered when icon is not available\n   */\n  const emptyIcon = {\n      ...defaultIconProps,\n      body: '',\n  };\n  const Icon = vue.defineComponent({\n      // Do not inherit other attributes: it is handled by render()\n      inheritAttrs: false,\n      // Set initial data\n      data() {\n          return {\n              // Current icon name\n              _name: '',\n              // Loading\n              _loadingIcon: null,\n              // Mounted status\n              iconMounted: false,\n              // Callback counter to trigger re-render\n              counter: 0,\n          };\n      },\n      mounted() {\n          // Mark as mounted\n          this.iconMounted = true;\n      },\n      unmounted() {\n          this.abortLoading();\n      },\n      methods: {\n          abortLoading() {\n              if (this._loadingIcon) {\n                  this._loadingIcon.abort();\n                  this._loadingIcon = null;\n              }\n          },\n          // Get data for icon to render or null\n          getIcon(icon, onload) {\n              // Icon is an object\n              if (typeof icon === 'object' &&\n                  icon !== null &&\n                  typeof icon.body === 'string') {\n                  // Stop loading\n                  this._name = '';\n                  this.abortLoading();\n                  return {\n                      data: icon,\n                  };\n              }\n              // Invalid icon?\n              let iconName;\n              if (typeof icon !== 'string' ||\n                  (iconName = stringToIcon(icon, false, true)) === null) {\n                  this.abortLoading();\n                  return null;\n              }\n              // Load icon\n              const data = getIconData(iconName);\n              if (!data) {\n                  // Icon data is not available\n                  if (!this._loadingIcon || this._loadingIcon.name !== icon) {\n                      // New icon to load\n                      this.abortLoading();\n                      this._name = '';\n                      if (data !== null) {\n                          // Icon was not loaded\n                          this._loadingIcon = {\n                              name: icon,\n                              abort: loadIcons([iconName], () => {\n                                  this.counter++;\n                              }),\n                          };\n                      }\n                  }\n                  return null;\n              }\n              // Icon data is available\n              this.abortLoading();\n              if (this._name !== icon) {\n                  this._name = icon;\n                  if (onload) {\n                      onload(icon);\n                  }\n              }\n              // Add classes\n              const classes = ['iconify'];\n              if (iconName.prefix !== '') {\n                  classes.push('iconify--' + iconName.prefix);\n              }\n              if (iconName.provider !== '') {\n                  classes.push('iconify--' + iconName.provider);\n              }\n              return { data, classes };\n          },\n      },\n      // Render icon\n      render() {\n          // Re-render when counter changes\n          this.counter;\n          const props = this.$attrs;\n          // Get icon data\n          const icon = (this.iconMounted || props.ssr)\n              ? this.getIcon(props.icon, props.onLoad)\n              : null;\n          // Validate icon object\n          if (!icon) {\n              return render(emptyIcon, props);\n          }\n          // Add classes\n          let newProps = props;\n          if (icon.classes) {\n              newProps = {\n                  ...props,\n                  class: (typeof props['class'] === 'string'\n                      ? props['class'] + ' '\n                      : '') + icon.classes.join(' '),\n              };\n          }\n          // Render icon\n          return render({\n              ...defaultIconProps,\n              ...icon.data,\n          }, newProps);\n      },\n  });\n  /**\n   * Internal API\n   */\n  const _api = {\n      getAPIConfig,\n      setAPIModule,\n      sendAPIQuery,\n      setFetch,\n      getFetch,\n      listAPIProviders,\n  };\n\n  exports.Icon = Icon;\n  exports._api = _api;\n  exports.addAPIProvider = addAPIProvider;\n  exports.addCollection = addCollection;\n  exports.addIcon = addIcon;\n  exports.buildIcon = iconToSVG;\n  exports.calculateSize = calculateSize;\n  exports.disableCache = disableCache;\n  exports.enableCache = enableCache;\n  exports.getIcon = getIcon;\n  exports.iconExists = iconLoaded;\n  exports.iconLoaded = iconLoaded;\n  exports.listIcons = listIcons;\n  exports.loadIcon = loadIcon;\n  exports.loadIcons = loadIcons;\n  exports.replaceIDs = replaceIDs;\n\n}));\n"],
  "mappings": "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",
  "names": ["exports", "storage", "simpleNames", "send", "_window"]
}
